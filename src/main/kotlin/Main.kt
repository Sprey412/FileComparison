import java.io.File

fun main() {
    println("üìÇ –í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ –ø–µ—Ä–≤–æ–º—É —Ç–µ–∫—Å—Ç–æ–≤–æ–º—É —Ñ–∞–π–ª—É:")
    val file1Path = readln().trim()

    println("üìÇ –í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫–æ –≤—Ç–æ—Ä–æ–º—É —Ç–µ–∫—Å—Ç–æ–≤–æ–º—É —Ñ–∞–π–ª—É:")
    val file2Path = readln().trim()

    val file1 = File(file1Path)
    val file2 = File(file2Path)

    if (!file1.exists() || !file2.exists()) {
        println("‚ùå –û—à–∏–±–∫–∞: –û–¥–∏–Ω –∏–ª–∏ –æ–±–∞ —Ñ–∞–π–ª–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        return
    }

    val comparator = FileComparator(file1, file2)

    while (true) {
        println("\nüîç –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
        println("1 - –ù–∞–π—Ç–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏")
        println("2 - –ù–∞–π—Ç–∏ —Ä–∞–∑–ª–∏—á–∞—é—â–∏–µ—Å—è —Å—Ç—Ä–æ–∫–∏")
        println("3 - –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ —Ñ–∞–π–ª")
        println("0 - –í—ã–π—Ç–∏")

        when (readln().trim()) {
            "1" -> {
                val (unique1, unique2) = comparator.findUniqueLines()
                println("\nüîπ –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –≤ –ø–µ—Ä–≤–æ–º —Ñ–∞–π–ª–µ:")
                unique1.forEach { println(it) }
                println("\nüîπ –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –≤–æ –≤—Ç–æ—Ä–æ–º —Ñ–∞–π–ª–µ:")
                unique2.forEach { println(it) }
            }
            "2" -> {
                val differences = comparator.findDifferentLines()
                println("\nüîπ –†–∞–∑–ª–∏—á–∞—é—â–∏–µ—Å—è —Å—Ç—Ä–æ–∫–∏:")
                differences.forEach { println(it) }
            }
            "3" -> {
                println("üìÅ –í–≤–µ–¥–∏—Ç–µ –∫–∞—Ç–∞–ª–æ–≥ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:")
                val outputDir = readln().trim()
                val outputFolder = File(outputDir)
                if (!outputFolder.exists()) outputFolder.mkdirs()
                comparator.saveResults(outputDir)
            }
            "0" -> {
                println("üëã –í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã.")
                return
            }
            else -> println("‚ö† –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        }
    }
}
